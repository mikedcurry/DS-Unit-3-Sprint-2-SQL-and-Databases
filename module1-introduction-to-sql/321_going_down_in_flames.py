# -*- coding: utf-8 -*-
"""321_going_down_in_flames.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W9UzceMUc601XpmvuLEAiVdJvweKvSS5

### From Training Kit Warm Up
"""

import numpy as np
import pandas as pd

url = ('https://raw.github.com/pandas-dev/pandas/master/pandas/tests/data/tips.csv')
tips = pd.read_csv(url)

tips.head()



"""## SQL Notes:

1. How many total Characters are there?
2. How many of each specific subclass?
3. How many total Items?
4. How many of the Items are weapons? How many are not?
5. How many Items does each character have? (Return first 20 rows)
6. How many Weapons does each character have? (Return first 20 rows)
7. On average, how many Items does each Character have?
8. On average, how many Weapons does each character have?
"""

# 1.)

# Like df.head()
SELECT *
FROM charactercreator_character
LIMIT 5;


# Like df.nunique().value_counts()
#queries only unique values in selected column
SELECT DISTINCT name
FROM charactercreator_characterv

Result: 297 rows returned in 19ms
At line 1:
SELECT DISTINCT name
FROM charactercreator_character -->

# 

#

#################################
# WTF is Harsh doing????
#####################################


import sqlite3

def create_connection(db_file, verbose=False):
    """ create a database connection to a SQLite database """
    conn = None
    try:
        conn = sqlite3.connect(db_file)
        if verbose:
            print(f'Using SQLite version: {sqlite3.version}')
            print(f'Creating Connection to {db_file}...')
        return conn
    except sqlite3.Error as e:
        print(e)


def select_all_query(db_file, query, verbose=False):
    """
    Query all rows in the database table
    :param conn: the Connection object
    :return: result as list
    """
    conn = create_connection(db_file, verbose)
    cur = conn.cursor()
    if not query.startswith('SELECT'):
        raise ValueError('Query should begin with `SELECT`')
    
    cur.execute(query)
    rows = cur.fetchall()

    if verbose:
        for row in rows:
            print(row)

    return rows



"""![alt text](https://slack-imgs.com/?c=1&o1=ro&url=https%3A%2F%2Fi.imgur.com%2FkZmKHQW.png)"""

# 2.) 
SELECT 
FROM charactercreator_mage

Result: 108 rows returned in 18ms
At line 1:
SELECT *
FROM charactercreator_mage

SELECT *
FROM charactercreator_thief

Result: 51 rows returned in 15ms
At line 1:
SELECT *
FROM charactercreator_thief

SELECT *
FROM charactercreator_cleric

Result: 75 rows returned in 14ms
At line 1:
SELECT *
FROM charactercreator_cleric

SELECT *
FROM charactercreator_fighter

Result: 68 rows returned in 14ms
At line 1:
SELECT *
FROM charactercreator_fighter

# 3.) How many total Items?

SELECT *
FROM armory_item

Result: 174 rows returned in 27ms
At line 1:
SELECT *
FROM armory_item

SELECT DISTINCT name
FROM armory_item

Result: 172 rows returned in 10ms
At line 1:
SELECT DISTINCT name
FROM armory_item

# 4.) How many of the Items are weapons? How many are not?
SELECT *
FROM armory_weapon

Result: 37 rows returned in 9ms
At line 1:
SELECT *
FROM armory_weapon

174-37 = 137

# 5.) How many Items does each character have? (Return first 20 rows)



"""https://slack-imgs.com/?c=1&o1=ro&url=https%3A%2F%2Fi.imgur.com%2FkZmKHQW.png"""

import pandas as pd

